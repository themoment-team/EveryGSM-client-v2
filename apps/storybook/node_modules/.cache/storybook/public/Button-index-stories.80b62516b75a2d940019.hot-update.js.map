{"version":3,"file":"Button-index-stories.80b62516b75a2d940019.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAeA;AAWA;AAVA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AA/BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClDA;AAEA;;;;;;;;;;;;;;;;;;;;ACFA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;;;;;;;;;;;;;;;ACPA;AAEA","sources":["webpack://storybook/../../packages/ui/Button/index.tsx","webpack://storybook/../../packages/ui/Button/style.ts","webpack://storybook/../../packages/ui/LoadingCircle/index.tsx","webpack://storybook/../../packages/ui/LoadingCircle/style.ts"],"sourcesContent":["import { css } from \"@emotion/react\";\nimport { CustomButton } from \"./style\";\nimport LoadingCircle from \"../LoadingCircle\";\n\ninterface ButtonProps {\n  onClick?: () => void;\n  children?: React.ReactNode;\n  disabled?: boolean;\n  isLoading?: boolean;\n  widthREM?: number;\n  bgColor?: string;\n  fontColor?: string;\n  hoverBgColor?: string;\n  position?: \"absolute\" | \"relative\" | \"fixed\" | \"static\" | \"sticky\";\n  bottomREM?: number;\n}\n\nconst Button: React.FC<ButtonProps> = ({\n  onClick,\n  children = \"\",\n  disabled = false,\n  isLoading = false,\n  widthREM,\n  bgColor,\n  fontColor,\n  hoverBgColor,\n  position,\n  bottomREM,\n}) => {\n  return (\n    <CustomButton\n      onClick={isLoading ? undefined : onClick}\n      css={css`\n        pointer-events: ${isLoading && \"none\"};\n        width: ${widthREM && `${widthREM}rem`};\n        background: ${bgColor && bgColor};\n        color: ${fontColor && fontColor};\n        position: ${position && position};\n        bottom: ${bottomREM && `${bottomREM}rem`};\n        :hover {\n          background: ${hoverBgColor && hoverBgColor};\n        }\n      `}\n      disabled={disabled}\n    >\n      {isLoading ? <LoadingCircle /> : children}\n    </CustomButton>\n  );\n};\n\nexport default Button;\n","import styled from \"@emotion/styled\";\n\nexport const CustomButton = styled.button`\n  width: 21.4375rem;\n  height: 3.0625rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: #ffffff;\n  background: #050505;\n  border-radius: 1.25rem;\n  font-size: 0.938rem;\n  font-weight: 700;\n  cursor: pointer;\n  transition: background 0.2s ease-in-out;\n  :hover {\n    background: #a4a4a4;\n    transition: background 0.2s ease-in-out;\n  }\n  :disabled {\n    background: #dcdcdc;\n    pointer-events: none;\n  }\n`;\n","import React from \"react\";\nimport { Spinner } from \"./style\";\n\nconst LoadingCircle: React.FC = () => {\n  return <Spinner />;\n};\n\nexport default LoadingCircle;\n","import styled from \"@emotion/styled\";\n\nexport const Spinner = styled.div`\n  width: 1.5rem;\n  height: 1.5rem;\n  border-radius: 100%;\n  background-color: #050505;\n  border: 0.188rem solid #d9d9d9;\n  border-top: 0.188rem solid #ffffff;\n  border-right: 0.188rem solid #ffffff;\n\n  animation: spin 1s ease-in-out infinite;\n\n  @keyframes spin {\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`;\n"],"names":[],"sourceRoot":""}