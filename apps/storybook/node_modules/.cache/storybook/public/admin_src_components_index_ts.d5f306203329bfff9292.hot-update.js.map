{"version":3,"file":"admin_src_components_index_ts.d5f306203329bfff9292.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAAA;AAMA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;ACFA;AACA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAFA;AACA;AAEA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAfA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AA3BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA6BA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sources":["webpack://storybook/../admin/src/components/AuthModel/index.tsx","webpack://storybook/../admin/src/components/AuthModel/style.ts","webpack://storybook/../admin/src/components/AuthTitle/index.tsx","webpack://storybook/../admin/src/components/AuthTitle/style.ts","webpack://storybook/../admin/src/components/Header/index.tsx","webpack://storybook/../admin/src/components/Header/style.ts"],"sourcesContent":["import React from \"react\";\nimport { Video } from \"./style\";\n\ninterface AuthModelProps {\n  modelUrl: string;\n}\n\nconst AuthModel: React.FC<AuthModelProps> = ({ modelUrl }) => {\n  return <Video src={modelUrl} autoPlay={true} muted={true} loop />;\n};\n\nexport default AuthModel;\n","import styled from \"@emotion/styled\";\n\nexport const Video = styled.video`\n  width: 13.75rem;\n  height: 13.75rem;\n  border-radius: 1.25rem;\n  display: block;\n  margin: 0 auto;\n  margin-top: 4.5rem;\n  background-color: #eeeeee;\n`;\n","import { css } from \"@emotion/react\";\nimport * as S from \"./style\";\n\ninterface AuthTitleProps {\n  titleArray: string[];\n  textAlign?: \"left\" | \"center\" | \"right\";\n}\n\n/**\n * `auth/*` path 에서 사용되는 타이틀\n *\n * @prop titleArray: string[] - 줄 단위(\\n)로 문자열을 나눈 배열을 받음\n * @prop textAlign: \"left\" | \"center\" | \"right\" - 타이틀 정렬 방식\n */\nconst AuthTitle: React.FC<AuthTitleProps> = ({\n  titleArray,\n  textAlign = \"left\",\n}) => {\n  return (\n    <S.TitleWrpapper\n      css={css`\n        text-align: ${textAlign};\n      `}\n    >\n      {titleArray.map((text, index) => (\n        <S.Title key={index}>{text}</S.Title>\n      ))}\n    </S.TitleWrpapper>\n  );\n};\n\nexport default AuthTitle;\n","import styled from \"@emotion/styled\";\n\nexport const TitleWrpapper = styled.div`\n  line-height: 1.5625rem;\n  margin-top: 2.5rem;\n`;\n\nexport const Title = styled.p`\n  font-size: 1.125rem;\n  font-weight: 700;\n`;\n","import Image from \"next/image\";\nimport * as S from \"./style\";\n// import * as I from \"assets\";\nimport * as I from \"../../assets\";\nimport Link from \"next/link\";\nimport { css } from \"@emotion/react\";\n\ninterface HeaderProps {\n  hasNotification: boolean;\n  name: string;\n}\n\nconst Header = ({ hasNotification, name }: HeaderProps) => {\n  return (\n    <S.Header>\n      <S.Nav>\n        <Image src=\"/GSMLogo.png\" alt=\"\" width=\"66\" height=\"37\" />\n        <I.HeaderRectangle />\n        <Link href=\"/\">\n          <S.Text>홈</S.Text>\n        </Link>\n        <S.Notofication>\n          <S.Text\n            css={\n              hasNotification &&\n              css`\n                color: #050505;\n                cursor: pointer;\n              `\n            }\n          >\n            가입 요청\n          </S.Text>\n          {hasNotification && <S.Notification />}\n        </S.Notofication>\n      </S.Nav>\n      <S.UserNameText>{name} 선생님</S.UserNameText>\n    </S.Header>\n  );\n};\n\nexport default Header;\n","import styled from \"@emotion/styled\";\n\nexport const Header = styled.header`\n  position: fixed;\n  top: 0;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  height: 5rem;\n  width: 100vw;\n  background-color: rgba(255, 255, 255, 0.9);\n  backdrop-filter: blur(0.625rem);\n  left: 0px;\n  top: 0px;\n  padding: 0 4.8vw;\n  font-weight: 600;\n  font-size: 0.875rem;\n`;\n\nexport const Nav = styled.nav`\n  display: flex;\n  gap: 1rem;\n  align-items: center;\n`;\n\nexport const Text = styled.p`\n  color: #828282;\n`;\n\nexport const UserNameText = styled.p`\n  color: #505050;\n`;\n\nexport const Notofication = styled.div`\n  position: relative;\n`;\n\nexport const Notification = styled.div`\n  position: absolute;\n  top: 0;\n  right: -0.313rem;\n  width: 0.25rem;\n  height: 0.25rem;\n  background-color: #f93535;\n  border-radius: 50%;\n`;\n"],"names":[],"sourceRoot":""}