{"version":3,"file":"Button-index-stories.iframe.bundle.js","mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXA;AACA;AACA;AAAA;AAiBA;AAUA;AATA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAaA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAhCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;ACFA;AACA;AACA;AAAA;AAMA;AAAA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sources":["webpack://storybook/../../node_modules/.pnpm/@babel+runtime@7.21.0/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","webpack://storybook/../../node_modules/.pnpm/@babel+runtime@7.21.0/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack://storybook/../../packages/ui/Button/index.tsx","webpack://storybook/../../packages/ui/Button/style.ts","webpack://storybook/../../packages/ui/LoadingCircle/index.tsx","webpack://storybook/../../packages/ui/LoadingCircle/style.ts"],"sourcesContent":["import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","import { css } from \"@emotion/react\";\nimport { CustomButton } from \"./style\";\nimport LoadingCircle from \"../LoadingCircle\";\nimport { ButtonHTMLAttributes, DetailedHTMLProps } from \"react\";\n\ninterface ButtonProps\n  extends DetailedHTMLProps<\n    ButtonHTMLAttributes<HTMLButtonElement>,\n    HTMLButtonElement\n  > {\n  isLoading?: boolean;\n  width?: string;\n  bgColor?: string;\n  fontColor?: string;\n  hoverBgColor?: string;\n  position?: \"absolute\" | \"relative\" | \"fixed\" | \"static\" | \"sticky\";\n  bottom?: string;\n}\n\nconst Button: React.FC<ButtonProps> = ({\n  children = \"\",\n  isLoading = false,\n  width,\n  bgColor,\n  fontColor,\n  hoverBgColor,\n  position,\n  bottom,\n  ...attributes\n}) => {\n  return (\n    <CustomButton\n      css={css`\n        width: ${width};\n        background: ${bgColor};\n        color: ${fontColor};\n        position: ${position};\n        bottom: ${bottom};\n        :hover {\n          background: ${hoverBgColor};\n        }\n        :disabled {\n          background: ${isLoading && (bgColor || \"#050505\")};\n        }\n      `}\n      disabled={isLoading}\n      {...attributes}\n    >\n      {isLoading ? <LoadingCircle bgColor={bgColor} /> : children}\n    </CustomButton>\n  );\n};\n\nexport default Button;\n","import styled from \"@emotion/styled\";\n\nexport const CustomButton = styled.button`\n  width: 21.4375rem;\n  height: 3.0625rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: #ffffff;\n  background: #050505;\n  border-radius: 1.25rem;\n  font-size: 0.938rem;\n  font-weight: 700;\n  cursor: pointer;\n  transition: background 0.2s ease-in-out;\n  :hover {\n    background: #a4a4a4;\n    transition: background 0.2s ease-in-out;\n  }\n  :disabled {\n    background: #dcdcdc;\n    pointer-events: none;\n  }\n`;\n","import React from \"react\";\nimport { Spinner } from \"./style\";\nimport { css } from \"@emotion/react\";\n\ninterface LoadingCircleProps {\n  bgColor?: string;\n}\n\nconst LoadingCircle: React.FC<LoadingCircleProps> = ({ bgColor }) => {\n  return (\n    <Spinner\n      css={css`\n        background-color: ${bgColor};\n      `}\n    />\n  );\n};\n\nexport default LoadingCircle;\n","import styled from \"@emotion/styled\";\n\nexport const Spinner = styled.div`\n  width: 1.5rem;\n  height: 1.5rem;\n  border-radius: 100%;\n  background-color: #050505;\n  border: 0.188rem solid #d9d9d9;\n  border-top: 0.188rem solid #ffffff;\n  border-right: 0.188rem solid #ffffff;\n\n  animation: spin 1s ease-in-out infinite;\n\n  @keyframes spin {\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`;\n"],"names":[],"sourceRoot":""}